{"name":"Apiclient","tagline":"SuperFaktúra oficiálny PHP-API klient.","body":"# SuperFaktúra PHP-API klient\r\n\r\n## Overview\r\n API SuperFaktúry umožňuje prepojenie externých aplikácií so SuperFaktúrou a \r\n dovoľuje tak vzdialene vytvárať doklady a získavať údaje o nich. \r\n Umožňuje tiež odosielať faktúry emailom alebo poštou.\r\n \r\n## Quickstart\r\n Aby ste sa nemusli trápiť s priamymi volaniami API funkcií a spôsobom prenosu dát, \r\n pripravili sme pre Vás jednoduchého API klienta, vďaka ktorému môžete Vaše faktúry vystavovať nadiaľku s \r\n minimálnym úsilím.\r\n \r\n## Postup ako získať PHP-API klienta\r\n\r\n### 1. spôsob (vyžaduje nainštalovaný systém Git)\r\n  1. vytvorte si adresár, ktorý má obsahovať SuperFaktúra PHP-API napr. (*$> mkdir /var/www/myproject/libs*)\r\n  2. prepnite sa do novo vytvoreného adresára a spustite cez konzolu \r\n  príkaz *$> git clone https://github.com/superfaktura/apiclient.git*\r\n  \r\n### 2. spôsob (nevyžaduje nainštalovaný systém Git)\r\n  1. Stiahnite si SuperFaktúra PHP-API kliknutím na tlačidlo \"Stiahnuť ZIP\", ktoré sa nachádza na \r\n  github stránke nášho API.\r\n\r\n## Ukážky kódu\r\n  Aby sme vám uľahčili prácu pri implementácii nášho API, vytvorili sme ukážky kódu \r\n  ([sample.php](https://github.com/superfaktura/apiclient/blob/master/sample.php) a [sample2.php](https://github.com/superfaktura/apiclient/blob/master/sample2.php)),\r\n  ktoré demonštrujú jeho funkcionalitu a dpĺňajú našu dokumentáciu o fungujúce príklady.\r\n\r\n## Začíname používať SuperFaktúra PHP-API\r\n  Na to, aby ste mohli začať API na plno využívať, je potrebné:\r\n### 1. Zaregistrovať sa v SuperFaktúre\r\n  * Na stránke https://moja.superfaktura.sk/registracia vykonajte registráciu. Automaticky získate 30 dní zadarmo.\r\n  * Po prihlásení vystavte skúšobnú faktúru cez GUI SuperFaktúry\r\n  \r\n### 2. Urobiť základné nastavenia v kóde\r\n  * Vytvoriť novú inštanciu triedy *SFAPIclient*\r\n  * Poskytnúť v konštruktore prihlasovacie údaje do API\r\n    + **Email** - prihlasovací email do SuperFaktúry\r\n    + **Token** - API token, ktorý nájdete v SuperFaktúre po prihlásení do svojho účtu \"*Nástroje > API prístup*\"\r\n  ```php\r\n    require_once('SFAPIclient/SFAPIclient.php');  // inc. SuperFaktúra PHP-API\r\n    $login_email = 'login@example.com';  // moja.superfaktura.sk login email\r\n    $api_token = 'abcd1234';  // token from my account\r\n    $sf_api = new SFAPIclient($login_email, $api_token);  // create SF PHP-API object\r\n  ```\r\n  \r\n### 3. Používanie PHP-API volaní\r\n  Nižšie je uvedený zoznam všetkých možných volaní, ktoré obsahuje najnovšia verzia nášho API.\r\n  *Všetky PHP funkcie nášho API sú verejné členské funkcie triedy SFAPIclient*.\r\n  Príklad vystavenia jednoduchej faktúry (pokračovanie predch. príkladu)\r\n  ```php\r\n    // set client for new invoice\r\n    $sf_api->setClient(array(\r\n      'name' => 'MyClient',\r\n      'address' => 'MyClient address 1',\r\n      'zip' => 12345,\r\n      'city' => 'MyClientCity'\r\n    ));\r\n    // set invoice attributes\r\n    $sf_api->setInvoice(array(\r\n      'name' => 'MyInvoice'\r\n    ));\r\n    // add new invoice item\r\n    $sf_api->addItem(array(\r\n      'name' => 'MyInvoiceItem',\r\n      'description' => 'Inv. item no. 1',\r\n      'unit_price' => 10,\r\n      'tax' => 20\r\n    ));\r\n    // save invoice in SuperFaktura\r\n    $json_response = $sf_api->save();\r\n    // TODO: handle exceptions\r\n  ```\r\n## Zoznam volaní (verejných členských funkcií vrátane konštruktora triedy SFAPIclient)\r\n  * *__construct($email, $apikey)*\r\n  * *addItem($item = array())*\r\n  * *addStockItem($item = array())*\r\n  * *addStockMovement($item = array())*\r\n  * *addTags($tag_ids = array())*\r\n  * *clients($params = array(), $list_info = true)*\r\n  * *delete($id)*\r\n  * *deleteInvoiceItem($invoice_id, $id)*\r\n  * *deleteExpense($id)*\r\n  * *deleteStockItem($id)*\r\n  * *edit()*\r\n  * *expense()*\r\n  * *expenses()*\r\n  * *getCountries()*\r\n  * *getSequences()*\r\n  * *getPDF($invoice_id, $token, $language = 'slo')*\r\n  * *getTags()*\r\n  * *invoice($id)*\r\n  * *invoices($params = array(), $list_info = true)*\r\n  * *markAsSent($invoice_id, $email, $subject = '', $message = '')*\r\n  * *payInvoice($invoice_id, $amount, $currency = 'EUR', $date = null, $payment_type = 'transfer')*\r\n  * *payExpense($expense_id, $amount, $currency = 'EUR', $date = null, $payment_type = 'transfer')*\r\n  * *save()*\r\n  * *setClient($key, $value = '')*\r\n  * *setExpense($key, $value = '')*\r\n  * *setInvoice($key, $value = '')*\r\n  * *sendInvoiceEmail($options = array())*\r\n  * *sendInvoicePost($options = array())*\r\n  * *stockItemEdit($item = array())*\r\n  * *stockItems($params = array(), $list_info = true)*\r\n  * *stockItem($id)*\r\n \r\n### 1. __construct\r\n Konštruktor. Nastaví email a API token pre autorizáciu.\r\n##### Parametre\r\n  * *$email* string povinný\r\n  * *$token* string povinný\r\n\r\n### 2. addItem\r\n Pridá položku na faktúru.\r\n##### Parametre\r\n * *$item* pole povinné\r\n\r\n##### Formát fakturačnej položky\r\n ```php\r\n array(\r\n\t'name'          \t   => 'Názov položky',\r\n\t'description'   \t   => 'Popis',\r\n\t'quantity'       \t   => 1, //množstvo\r\n\t'unit'         \t \t   => 'ks', //jednotka\r\n\t'unit_price'     \t   => 40.83, //cena bez dph, resp. celková cena, ak nie ste platcami DPH\r\n\t'tax'           \t   => 20, //sadzba DPH, ak nie ste platcom DPH, zadajte 0\r\n\t'stock_item_id'  \t   => 123, //id skladovej polozky\r\n\t'sku'             \t   => 'SKU123', //skladove oznacenie\r\n\t'discount'        \t   => 50, //Zľava na položku v %\r\n\t'load_data_from_stock' => true //Načíta nevyplnené údaje položky zo skladu\r\n)\r\n ```\r\n### 3. addTags\r\n Pridá faktúre tagy podľa číselníka\r\n##### Parametre\r\n* *$tags_ids* pole povinné, pole ID požadovaných tagov\r\n\r\n### 4. clients\r\n Vráti zoznam klientov\r\n##### Parametre\r\n* *$params* pole povinné. Parametre pre filtrovanie a stránkovanie.\r\n* *$list_info* bool nepovinné. Určuje, či vrátené dáta budú obsahovať aj údaje o zozname (celkový počet položiek, počet strán...)\r\n\r\n##### Možné parametre pre filtrovanie, číselníky hodnôt sa nachádzajú pod zoznamom parametrov\r\n ```php\r\n array(\r\n\t'search' => '', //Hľadaný výraz v klientovi. Prehľadáva všetky polia.\r\n)\r\n ```\r\n##### Formát vrátených dát\r\n  ```php\r\n  {\r\n    \"itemCount\": 67,\r\n    \"pageCount\": 7,\r\n    \"perPage\": 10,\r\n    \"page\": 1,\r\n    \"items\": [{\r\n        \"Client\": {...},\r\n    },...]\r\n}\r\n ```\r\n\r\n### 5. delete\r\nZmaže faktúru.\r\n##### Parametre\r\n* *$id int* povinné. Získané z Invoice->id.\r\n\r\n### 6. deleteInvoiceItem\r\nZmaže položku na faktúre.\r\n##### Parametre\r\n* *$invoice_id* int povinné. Získané z Invoice->id.\r\n* *$id* int povinné. Získané z InvoiceItem->id.\r\n\r\n### 7. deleteExpense\r\nZmaže náklad.\r\n##### Parametre\r\n* *$id* int povinné. Získané z Expense->id.\r\n\r\n### 8. deleteStockItem\r\nZmaže skladovú položku.\r\n##### Parametre\r\n* *$id* int povinné. Získané z StockItem->id.\r\n\r\n### 9. edit\r\nUloží nastavené dáta a aktualizuje faktúru.\r\n##### Parametre: žiadne\r\n##### Návratová hodnota: objekt\r\n##### Kódy chýb\r\n* **1** Id dokladu má nesprávny formát\r\n* **2** Neexistujúce id dokladu\r\n* **3** Chyba pri editácii faktúry. Volanie treba opakovať.\r\n* **6** Chyba pri validácii úrajov. Povinné údaje chýbajú alebo nemajú správny formát.\r\n\r\n### 10. expenses\r\nVráti zoznam nákladov.\r\n##### Parametre\r\n* *$params* pole povinné. Parametre pre filtrovanie a stránkovanie.\r\n* *$list_info* bool nepovinné. Určuje, či vrátené dáta budú obsahovať aj údaje o zozname (celkový počet položiek, počet strán...)\r\n\r\n### 11. expense\r\nVráti detaily nákladu.\r\n##### Parametre\r\n* *$expense_id* int povinné. Získané z Expense->id.\r\n\r\n\r\n\r\n\r\n \r\n  \r\n\r\n\r\n \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}